{"version":3,"sources":["Todo/todoSlice.js","AddTodo/AddTodo.js","GetTodos/GetTodos.js","SelectTodos/SelectTodos.js","App/index.js","reportWebVitals.js","redux/store.js","index.js"],"names":["axios","require","todoSlice","createSlice","name","initialState","todoList","oneTodo","id","status","description","dueDate","createdAt","updatedAt","messages","success","failure","loading","reducers","setItemToList","state","action","payload","setTodoList","setSuccessStatus","setFailureStatus","setLoading","actions","setTodoStatus","addNewTodo","content","dispatch","a","method","url","data","response","console","log","getAllTodos","params","error","toggleTodoStatus","deleteTodoAction","selectAllTodos","todo","selectLoadingStatus","selectStatusMessages","INITIAL_STATE","category","AddTodoForm","handleShow","handleClose","show","handleChange","inputs","handleSubmit","Row","className","Col","md","xs","onClick","OverlayTrigger","overlay","Tooltip","Button","variant","style","pointerEvents","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Form","Group","as","controlId","Label","column","sm","Control","type","placeholder","value","onChange","required","rows","Footer","disabled","AddTodo","useDispatch","useState","setShow","selectStatus","useSelector","setInputs","e","preventDefault","toast","event","target","TodoList","handleDelete","ListGroup","Item","textDecoration","Check","checked","xmlns","width","color","height","fill","class","viewBox","d","fill-rule","GetAllTodos","todos","isLoading","persist","React","useEffect","length","map","SelectForm","input","SelectTodo","toLowerCase","App","Navbar","expand","bg","Container","mt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","counterReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.1c897e55.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst axios = require(\"axios\");\r\n\r\nexport const todoInitialState = {\r\n  todoList: [],\r\n  oneTodo: {\r\n    id: 0,\r\n    status: \"\",\r\n    description: \"\",\r\n    dueDate: \"\",\r\n    createdAt: \"\",\r\n    updatedAt: \"\",\r\n  },\r\n  messages: {\r\n    success: false,\r\n    failure: false,\r\n    loading: false,\r\n  },\r\n};\r\n\r\nexport const todoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState: todoInitialState,\r\n  reducers: {\r\n    setItemToList: (state, action) => {\r\n      state.oneTodo = action.payload;\r\n    },\r\n    setTodoList: (state, action) => {\r\n      state.todoList = action.payload;\r\n    },\r\n    setSuccessStatus: (state, action) => {\r\n      state.messages.success = action.payload;\r\n    },\r\n    setFailureStatus: (state, action) => {\r\n      state.messages.failure = action.payload;\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.messages.loading = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setFailureStatus,\r\n  setSuccessStatus,\r\n  setItemToList,\r\n  setTodoList,\r\n  setTodoStatus,\r\n  setLoading,\r\n} = todoSlice.actions;\r\n\r\nexport const addNewTodo = (content) => async (dispatch) => {\r\n  dispatch(setSuccessStatus(false));\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: \"https://todo-baxk.herokuapp.com/todos/add\",\r\n      data: content,\r\n    });\r\n    dispatch(setItemToList(response));\r\n    dispatch(setSuccessStatus(true));\r\n    dispatch(setFailureStatus(false));\r\n    dispatch(setLoading(false));\r\n  } catch (error) {\r\n    dispatch(setSuccessStatus(false));\r\n    dispatch(setFailureStatus(true));\r\n    console.log(error.response);\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\nexport const getAllTodos = (params) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const { data } = await axios({\r\n      method: \"get\",\r\n      url: `https://todo-baxk.herokuapp.com/todos?${params}`,\r\n    });\r\n    dispatch(setTodoList(data.data));\r\n    dispatch(setSuccessStatus(true));\r\n    dispatch(setFailureStatus(false));\r\n    // console.log(data);\r\n    dispatch(setLoading(false));\r\n  } catch (error) {\r\n    dispatch(setSuccessStatus(false));\r\n    dispatch(setFailureStatus(true));\r\n    console.error(error);\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\nexport const toggleTodoStatus = (id, status) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    await axios({\r\n      method: \"put\",\r\n      url: `https://todo-baxk.herokuapp.com/todos/${id}`,\r\n      data: { status },\r\n    });\r\n    dispatch(setSuccessStatus(true));\r\n    dispatch(setFailureStatus(false));\r\n    dispatch(setLoading(false));\r\n  } catch (error) {\r\n    dispatch(setSuccessStatus(false));\r\n    dispatch(setFailureStatus(true));\r\n    console.error(error);\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\nexport const deleteTodoAction = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const { data } = await axios({\r\n      method: \"delete\",\r\n      url: `https://todo-baxk.herokuapp.com/todos/${id}`,\r\n    });\r\n    console.log(data);\r\n    dispatch(setSuccessStatus(true));\r\n    dispatch(setFailureStatus(false));\r\n    dispatch(setLoading(false));\r\n  } catch (error) {\r\n    dispatch(setSuccessStatus(false));\r\n    dispatch(setFailureStatus(true));\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = (state) => state.todo.value;\r\n\r\nexport const selectAllTodos = (state) => state.todo.todoList;\r\nexport const selectLoadingStatus = (state) => state.todo.messages.loading;\r\nexport const selectStatusMessages = (state) => state.todo.messages;\r\n\r\nexport default todoSlice.reducer;\r\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  Button,\n  Modal,\n  OverlayTrigger,\n  Tooltip,\n  Col,\n  Row,\n  Form,\n} from \"react-bootstrap\";\n\nimport {\n  addNewTodo,\n  getAllTodos,\n  selectStatusMessages,\n} from \"../Todo/todoSlice\";\n\nconst INITIAL_STATE = {\n  category: \"\",\n  description: \"\",\n  dueDate: \"\",\n};\n\nexport const AddTodoForm = ({\n  handleShow,\n  handleClose,\n  show,\n  handleChange,\n  inputs,\n  handleSubmit,\n}) => (\n  <>\n    <Row className=\"mt-5\">\n      <ToastContainer />\n      <Col></Col>\n      <Col md={2} xs={6} className=\"ml-2\" onClick={handleShow}>\n        <OverlayTrigger\n          overlay={<Tooltip id=\"tooltip-disabled\">Add Todo Form</Tooltip>}\n        >\n          <span className=\"d-inline-block\">\n            <Button\n              variant=\"outline-primary\"\n              className=\"btn-add\"\n              style={{ pointerEvents: \"none\" }}\n            >\n              +\n            </Button>{\" \"}\n          </span>\n        </OverlayTrigger>\n      </Col>\n    </Row>\n    <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\n      <Modal.Header closeButton>\n        <Modal.Title>Add Todo</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n            <Form.Label column sm=\"2\">\n              Category:\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Category\"\n                name=\"category\"\n                value={inputs.category}\n                onChange={handleChange}\n                required\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label column sm=\"2\">\n              Details:\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                name=\"description\"\n                value={inputs.description}\n                onChange={handleChange}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n            <Form.Label column sm=\"2\">\n              Date:\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                type=\"date\"\n                placeholder=\"date\"\n                name=\"dueDate\"\n                value={inputs.dueDate}\n                onChange={handleChange}\n              />\n            </Col>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={handleSubmit} name=\"addTodo\" disabled = {!inputs.category || !inputs.description || !inputs.dueDate}>\n          Submit\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  </>\n);\n\nexport const AddTodo = () => {\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const selectStatus = useSelector(selectStatusMessages);\n\n  const [inputs, setInputs] = useState(INITIAL_STATE);\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    const target = event.target;\n    const value = target.value;\n    setInputs((inputs) => ({ ...inputs, [target.name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { description, category, dueDate } = inputs;\n    const content = {\n      category,\n      description,\n      dueDate,\n    };\n    toast(\"Wow so easy!\");\n    await dispatch(addNewTodo(content));\n    console.log(selectStatus);\n    if (selectStatus.success) {\n      await dispatch(getAllTodos(\"\"));\n      handleClose();\n    }\n  };\n\n  return (\n    <>\n      <AddTodoForm\n        show={show}\n        handleClose={handleClose}\n        inputs={inputs}\n        handleShow={handleShow}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ListGroup, Form, Col, Row } from \"react-bootstrap\";\n\nimport { selectAllTodos, getAllTodos, toggleTodoStatus, deleteTodoAction, selectLoadingStatus } from \"../Todo/todoSlice\";\n\nconst TodoList = ({ handleChange, todo, handleDelete }) => {\n  return (\n    <div>\n      <ListGroup>\n        <ListGroup.Item style={{ textDecoration: todo.status === \"completed\" ? 'line-through': 'none' }}>\n          <Row>\n            <Col xs={1} md={1}>\n              <Form.Group controlId=\"formBasicCheckbox\" className=\"mr-5\">\n                <Form.Check\n                  type=\"checkbox\"\n                  onChange={handleChange}\n                  name={todo.id}\n                  value={todo.status}\n                  checked={todo.status === 'completed' ? true: false }\n                />\n              </Form.Group>\n            </Col>\n            <Col xs={9} md={10}>\n              <div className=\"ml-5\">{todo.description}</div>\n            </Col>\n            <Col>\n              <div name={todo.id} onClick={(e) => handleDelete(e, todo.id)}>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                color=\"red\"\n                height=\"16\"\n                fill=\"currentColor\"\n                class=\"bi bi-trash\"\n                viewBox=\"0 0 16 16\"\n                name={todo.id}\n              >\n                <path name={todo.id} d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\n                />\n              </svg>\n              </div>\n            </Col>\n          </Row>\n        </ListGroup.Item>\n      </ListGroup>\n    </div>\n  );\n};\n\nexport const GetAllTodos = () => {\n  const todos = useSelector(selectAllTodos);\n  const isLoading = useSelector(selectLoadingStatus)\n  const dispatch = useDispatch();\n  // const [inputs, setInputs] = useState(INITIAL_STATE)\n\n  const handleChange = async (event) => {\n    event.persist();\n    const target = event.target;\n    // const value = target.checked ? 'completed' : 'pending';\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    // setInputs((inputs) => ({ ...inputs, [target.name]: value }));\n    const status = value ? 'completed': 'pending';\n    // console.log(target.name, value);\n    await dispatch(toggleTodoStatus(target.name, status));\n    await dispatch(getAllTodos(\"\")); \n  };\n\n  const handleDelete = async (event, id) => {\n    event.persist();\n    await dispatch(deleteTodoAction(id));\n    await dispatch(getAllTodos(\"\"));  \n\n  }\n\n  React.useEffect(() => {\n    dispatch(getAllTodos(\"\"));\n    return () => {\n      dispatch(getAllTodos(\"\"));\n    };\n  }, [dispatch]);\n\n  return (\n    <>\n      {todos.length\n        ? todos.map((todo) => (\n            <div key={todo.id}>\n              <TodoList handleChange={handleChange} todo={todo} handleDelete={handleDelete} />\n            </div>\n          ))\n        : null}\n        <div>\n          {!isLoading && !todos.length && <p>No Todo(s) Yet</p>}\n          {isLoading && <p>Loading</p>}\n        </div>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Form } from \"react-bootstrap\";\nimport { getAllTodos } from \"../Todo/todoSlice\";\n\nexport const SelectForm = ({ input, handleChange }) => (\n  <div>\n    <Form>\n      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n        <Form.Control\n          as=\"select\"\n          onChange={handleChange}\n          name=\"todoCategory\"\n          value={input}\n        >\n          <option>Select a category</option>\n          <option>test 3</option>\n          <option>Sports</option>\n          <option>Java</option>\n          <option>Python</option>\n        </Form.Control>\n      </Form.Group>\n    </Form>\n  </div>\n);\n\nexport const SelectTodo = () => {\n  const dispatch = useDispatch();\n  const [input, setInputs] = useState(\"\");\n\n  const handleChange = (event) => {\n    event.persist();\n    const target = event.target;\n    const value = target.value.toLowerCase();\n    setInputs(value);\n    if (value === \"select a category\") {\n      return dispatch(getAllTodos(\"\"));\n    }\n    dispatch(getAllTodos(`category=${value}`));\n  };\n  return (\n    <>\n      <SelectForm input={input} handleChange={handleChange} />\n    </>\n  );\n};\n","import \"./App.css\";\nimport { Navbar, Container, Col, Row } from \"react-bootstrap\";\nimport { GetAllTodos, AddTodo, SelectTodo } from \"../Todo\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <Navbar expand=\"lg\" variant=\"light\" bg=\"light\" className=\"page-header\">\n          <Container>\n            <Col className=\"header-site-name mt-2\">\n              <h1>GetItDone</h1>\n            </Col>\n          </Container>\n        </Navbar>\n      </header>\n      <section>\n        <Container>\n          <Row className=\"mt-4\">\n            <Col mt={2} className=\"mt-3\">\n              New Listings\n            </Col>\n            <Col>\n              <SelectTodo />\n            </Col>\n          </Row>\n          <GetAllTodos />\n          <AddTodo />\n        </Container>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../Todo/todoSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    todo: counterReducer,\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}