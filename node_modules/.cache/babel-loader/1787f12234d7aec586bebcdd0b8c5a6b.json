{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\nconst axios = require('axios');\n\nexport const todoSlice = createSlice({\n  name: 'todo',\n  initialState: {\n    todoList: [],\n    oneTodo: {\n      id: 0,\n      status: '',\n      description: '',\n      dueDate: '',\n      createdAt: '',\n      updatedAt: ''\n    },\n    messages: {\n      success: false,\n      failure: false\n    }\n  },\n  reducers: {\n    addItemToList: (state, action) => {\n      state.oneTodo = action.payload;\n    },\n    getTodoList: (state, action) => {\n      state.todoList = action.payload;\n    },\n    setSuccessStatus: (state, action) => {\n      state.messages.success = action.payload;\n    },\n    setFailureStatus: (state, action) => {\n      state.messages.failure = action.payload;\n    }\n  }\n});\nexport const {\n  setFailureStatus,\n  setSuccessStatus,\n  addItemToList,\n  getTodoList,\n  setTodoStatus\n} = todoSlice.actions;\nexport const addNewTodo = content => async dispatch => {\n  try {\n    const response = await axios({\n      method: 'post',\n      url: 'https://todo-baxk.herokuapp.com/todos/add',\n      data: content\n    });\n    dispatch(addItemToList(response));\n    console.log(response);\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getAllTodos = params => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios({\n      method: 'get',\n      url: `https://todo-baxk.herokuapp.com/todos?${params}`\n    });\n    dispatch(getTodoList(data.data));\n    console.log(data);\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const toggleTodoStatus = (id, status) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios({\n      method: 'put',\n      url: `https://todo-baxk.herokuapp.com/todos/${id}`,\n      data: {\n        status\n      }\n    });\n    dispatch(setSuccessStatus(true));\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const deleteTodoAction = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios({\n      method: 'delete',\n      url: `https://todo-baxk.herokuapp.com/todos/${id}`\n    });\n    console.log(data);\n    dispatch(setSuccessStatus(true));\n  } catch (error) {\n    console.error(error);\n  }\n}; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectCount = state => state.todo.value;\nexport const selectAllTodos = state => state.todo.todoList;\nexport default todoSlice.reducer;","map":{"version":3,"sources":["/Users/kasule/Desktop/todo-web/src/Todo/todoSlice.js"],"names":["createSlice","axios","require","todoSlice","name","initialState","todoList","oneTodo","id","status","description","dueDate","createdAt","updatedAt","messages","success","failure","reducers","addItemToList","state","action","payload","getTodoList","setSuccessStatus","setFailureStatus","setTodoStatus","actions","addNewTodo","content","dispatch","response","method","url","data","console","log","error","getAllTodos","params","toggleTodoStatus","deleteTodoAction","selectCount","todo","value","selectAllTodos","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nconst axios = require('axios');\r\n\r\nexport const todoSlice = createSlice({\r\n  name: 'todo',\r\n  initialState: {\r\n    todoList: [],\r\n    oneTodo: {\r\n      id: 0,\r\n      status: '',\r\n      description: '',\r\n      dueDate: '',\r\n      createdAt: '',\r\n      updatedAt: ''\r\n    },\r\n    messages: {\r\n      success: false,\r\n      failure: false\r\n    }\r\n  },\r\n  reducers: {\r\n    addItemToList: (state, action) => {\r\n      state.oneTodo = action.payload;\r\n    },\r\n    getTodoList: (state, action) => {\r\n      state.todoList = action.payload;\r\n    },\r\n    setSuccessStatus: (state, action) => {\r\n      state.messages.success = action.payload\r\n    },\r\n    setFailureStatus: (state, action) => {\r\n      state.messages.failure = action.payload\r\n    }\r\n  },\r\n});\r\n\r\nexport const { setFailureStatus, setSuccessStatus, addItemToList, getTodoList, setTodoStatus } = todoSlice.actions;\r\n\r\nexport const addNewTodo = content => async (dispatch) => {\r\n  try {\r\n    const response = await axios({\r\n      method: 'post',\r\n      url: 'https://todo-baxk.herokuapp.com/todos/add',\r\n      data: content\r\n    });\r\n    dispatch(addItemToList(response))\r\n    console.log(response);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n\r\nexport const getAllTodos = params => async (dispatch) => {\r\n  try {\r\n    const { data } = await axios({\r\n      method: 'get',\r\n      url: `https://todo-baxk.herokuapp.com/todos?${params}`\r\n    });\r\n    dispatch(getTodoList(data.data))\r\n    console.log(data);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport const toggleTodoStatus = (id, status) => async (dispatch) => {\r\n  try {\r\n    const { data }  = await axios({\r\n      method: 'put',\r\n      url: `https://todo-baxk.herokuapp.com/todos/${id}`,\r\n      data: { status }\r\n    });\r\n    dispatch(setSuccessStatus(true))\r\n    \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport const deleteTodoAction = (id) => async (dispatch) => {\r\n  try {\r\n    const { data }  = await axios({\r\n      method: 'delete',\r\n      url: `https://todo-baxk.herokuapp.com/todos/${id}`\r\n    });\r\n    console.log(data);\r\n    dispatch(setSuccessStatus(true))\r\n    \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.todo.value;\r\n\r\nexport const selectAllTodos = state => state.todo.todoList;\r\n\r\nexport default todoSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}