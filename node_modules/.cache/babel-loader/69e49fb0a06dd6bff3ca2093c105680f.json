{"ast":null,"code":"var _jsxFileName = \"/Users/kasule/Desktop/todo-web/src/Todo/Counter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { decrement, increment, incrementByAmount, incrementAsync, selectCount, addNewTodo } from './counterSlice';\nimport styles from './Counter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Counter() {\n  _s();\n\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const content = {\n      category: \"test 3\",\n      description: \"all details\",\n      dueDate: \"11-21-2020\"\n    };\n    return dispatch(addNewTodo(content));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        \"aria-label\": \"Increment value\",\n        onClick: handleSubmit,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.value,\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        \"aria-label\": \"Decrement value\",\n        onClick: () => dispatch(decrement()),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.textbox,\n        \"aria-label\": \"Set increment amount\",\n        value: incrementAmount,\n        onChange: e => setIncrementAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: () => dispatch(incrementByAmount(Number(incrementAmount) || 0)),\n        children: \"Add Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.asyncButton,\n        onClick: () => dispatch(incrementAsync(Number(incrementAmount) || 0)),\n        children: \"Add Async\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Counter, \"n8Hn+dfjiOyoP6EA1ZJKfEKeUOY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/kasule/Desktop/todo-web/src/Todo/Counter.js"],"names":["React","useState","useSelector","useDispatch","decrement","increment","incrementByAmount","incrementAsync","selectCount","addNewTodo","styles","Counter","count","dispatch","incrementAmount","setIncrementAmount","handleSubmit","e","preventDefault","content","category","description","dueDate","row","button","value","textbox","target","Number","asyncButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,iBAHF,EAIEC,cAJF,EAKEC,WALF,EAMEC,UANF,QAOO,gBAPP;AAQA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,QAAMC,KAAK,GAAGV,WAAW,CAACM,WAAD,CAAzB;AACA,QAAMK,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,GAAD,CAAtD;;AAEA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,QAAQ,EAAE,QADI;AAEdC,MAAAA,WAAW,EAAE,aAFC;AAGdC,MAAAA,OAAO,EAAE;AAHK,KAAhB;AAKA,WAAOT,QAAQ,CAACJ,UAAU,CAACU,OAAD,CAAX,CAAf;AACD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAET,MAAM,CAACa,GAAvB;AAAA,8BACE;AACE,QAAA,SAAS,EAAEb,MAAM,CAACc,MADpB;AAEE,sBAAW,iBAFb;AAGE,QAAA,OAAO,EAAER,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAM,QAAA,SAAS,EAAEN,MAAM,CAACe,KAAxB;AAAA,kBAAgCb;AAAhC;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AACE,QAAA,SAAS,EAAEF,MAAM,CAACc,MADpB;AAEE,sBAAW,iBAFb;AAGE,QAAA,OAAO,EAAE,MAAMX,QAAQ,CAACT,SAAS,EAAV,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE;AAAK,MAAA,SAAS,EAAEM,MAAM,CAACa,GAAvB;AAAA,8BACE;AACE,QAAA,SAAS,EAAEb,MAAM,CAACgB,OADpB;AAEE,sBAAW,sBAFb;AAGE,QAAA,KAAK,EAAEZ,eAHT;AAIE,QAAA,QAAQ,EAAEG,CAAC,IAAIF,kBAAkB,CAACE,CAAC,CAACU,MAAF,CAASF,KAAV;AAJnC;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACE,QAAA,SAAS,EAAEf,MAAM,CAACc,MADpB;AAEE,QAAA,OAAO,EAAE,MACPX,QAAQ,CAACP,iBAAiB,CAACsB,MAAM,CAACd,eAAD,CAAN,IAA2B,CAA5B,CAAlB,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAeE;AACE,QAAA,SAAS,EAAEJ,MAAM,CAACmB,WADpB;AAEE,QAAA,OAAO,EAAE,MAAMhB,QAAQ,CAACN,cAAc,CAACqB,MAAM,CAACd,eAAD,CAAN,IAA2B,CAA5B,CAAf,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GA1DeH,O;UACAT,W,EACGC,W;;;KAFHQ,O","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  decrement,\r\n  increment,\r\n  incrementByAmount,\r\n  incrementAsync,\r\n  selectCount,\r\n  addNewTodo\r\n} from './counterSlice';\r\nimport styles from './Counter.module.css';\r\n\r\nexport function Counter() {\r\n  const count = useSelector(selectCount);\r\n  const dispatch = useDispatch();\r\n  const [incrementAmount, setIncrementAmount] = useState('2');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const content = {\r\n      category: \"test 3\",\r\n      description: \"all details\",\r\n      dueDate: \"11-21-2020\"\r\n    }\r\n    return dispatch(addNewTodo(content))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.row}>\r\n        <button\r\n          className={styles.button}\r\n          aria-label=\"Increment value\"\r\n          onClick={handleSubmit}\r\n        >\r\n          +\r\n        </button>\r\n        <span className={styles.value}>{count}</span>\r\n        <button\r\n          className={styles.button}\r\n          aria-label=\"Decrement value\"\r\n          onClick={() => dispatch(decrement())}\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n      <div className={styles.row}>\r\n        <input\r\n          className={styles.textbox}\r\n          aria-label=\"Set increment amount\"\r\n          value={incrementAmount}\r\n          onChange={e => setIncrementAmount(e.target.value)}\r\n        />\r\n        <button\r\n          className={styles.button}\r\n          onClick={() =>\r\n            dispatch(incrementByAmount(Number(incrementAmount) || 0))\r\n          }\r\n        >\r\n          Add Amount\r\n        </button>\r\n        <button\r\n          className={styles.asyncButton}\r\n          onClick={() => dispatch(incrementAsync(Number(incrementAmount) || 0))}\r\n        >\r\n          Add Async\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}